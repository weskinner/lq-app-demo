{"version":3,"sources":["features/counter/Counter.module.css","logo.svg","features/counter/counterAPI.js","features/counter/counterSlice.js","layout/LiqwidApp.js","features/supply/supplySlice.js","features/wallet/walletSlice.js","features/supply/SupplyButton.js","features/supply/SupplyMarket.js","features/supply/Supply.js","features/market/marketSlice.js","features/borrow/BorrowButton.js","features/borrow/BorrowMarket.js","features/borrow/Borrow.js","features/wallet/Wallet.js","layout/DemoApp.js","features/borrow/borrowSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","LiqwidApp","supplySlice","markets","asset","APY","usdExchange","isOn","totalBalance","toggleSupply","find","m","walletSlice","address","assets","balance","currentSupply","currentBorrow","setSupply","borrow","SupplyButton","props","useState","show","setShow","confirming","setconfirming","tab","settab","dispatch","useDispatch","handleClose","setAmountToSupply","setAmountToWithdraw","Tabs","onClick","amountToSupply","isSupplyConfirmDisabled","walletAsset","supplyTab","Modal","Body","Form","FormGroup","Label","FormControl","type","placeholder","onChange","e","target","Table","Footer","Button","variant","disabled","parseInt","amountToWithdraw","isWithdrawConfirmDisabled","withdrawTab","withdrawSupply","ConfirmingModal","Header","Title","market","onHide","closeButton","SupplyMarket","assetName","wallet","useSelector","Check","id","label","onToggleChanged","Supply","supply","totalSupply","map","s","reduce","acc","usd","marketRows","className","style","height","toFixed","marketSlice","apySupply","apyBorrow","BorrowButton","body","footer","setamount","isConfirmDisabled","BorrowMarket","liquidity","Borrow","LqNavbar","Navbar","bg","Brand","Collapse","Wallet","DemoApp","netAPY","Container","Row","Col","marginBottom","marginTop","borrowSlice","require","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fdb832d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};","export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import './LiqwidApp.css'\n\nfunction LiqwidApp() {\n\n    return (\n        <div className=\"LiqwidApp\">\n            <section className=\"header\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm\">Liqwid</div>\n                        <div className=\"col-sm\"></div>\n                        <div className=\"col-sm text-right\">Wallet: A89...D7F</div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"balance text-center\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-md-center\">\n                        <div className=\"col-md-3 col-sm-4\">\n                            <div>Supply Balance</div>\n                            <div>$1,400.000000</div>\n                        </div>\n                        <div className=\"col-md-3 col-sm-4\">\n                            <div>Net APY</div>\n                            <div>10%</div>\n                        </div>\n                        <div className=\"col-md-3 col-sm-4\">\n                            <div>Borrow Balance</div>\n                            <div>$1,200.000000</div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"markets\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <MarketPanel />\n                        </div>\n                        <div className=\"col\">\n                            <MarketPanel />\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )   \n}\n\nfunction MarketPanel() {\n    return (\n        <div className=\"container market-panel border border-dark rounded\">\n            <div className=\"row\">\n                <div className=\"col py-3\">Supply</div>\n            </div>\n            <div className=\"row border-top border-dark py-1 text-muted\">\n                <div className=\"col\">\n                    Asset\n                                    </div>\n                <div className=\"col\">\n                    APY\n                                    </div>\n                <div className=\"col\">\n                    Wallet\n                                    </div>\n                <div className=\"col\">\n                    Collateral\n                                    </div>\n            </div>\n            <div className=\"row border-top border-dark py-4\">\n                <div className=\"col\">\n                    ADA\n                                    </div>\n                <div className=\"col\">\n                    5%\n                                    </div>\n                <div className=\"col\">\n                    1234.1283\n                                    </div>\n                <div className=\"col\">\n\n                </div>\n            </div>\n            <div className=\"row border-top border-dark py-4\">\n                <div className=\"col\">\n                    ADA\n                                    </div>\n                <div className=\"col\">\n                    5%\n                                    </div>\n                <div className=\"col\">\n                    1234.1283\n                                    </div>\n                <div className=\"col\">\n\n                </div>\n            </div>\n            <div className=\"row border-top border-dark py-4\">\n                <div className=\"col\">\n                    ADA\n                                    </div>\n                <div className=\"col\">\n                    5%\n                                    </div>\n                <div className=\"col\">\n                    1234.1283\n                                    </div>\n                <div className=\"col\">\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LiqwidApp;","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const supplySlice = createSlice({\n  name: \"supply\",\n  initialState: {\n    markets: [\n      {\n        asset: \"ADA\",\n        APY: \"10\",\n        usdExchange: 1.75127,\n        isOn: false\n      },\n      {\n        asset: \"LQ\",\n        APY: \"10\",\n        isOn: false,\n        usdExchange: 12.23,\n      }\n    ],\n    totalBalance: 1337\n  },\n  reducers: {\n    toggleSupply(state, action) {\n      state.markets.find(m => m.asset === action.payload.asset).isOn = true\n    }\n  }\n})","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const walletSlice = createSlice({\n  name: \"wallet\",\n  initialState: {\n    address: \"lqTest\",\n    assets: [\n      {\n        name: \"ADA\",\n        balance: 990,\n        currentSupply: 10,\n        currentBorrow: 0\n      },\n      {\n        name: \"LQ\",\n        balance: 500,\n        currentSupply: 0,\n        currentBorrow: 0\n      }\n    ]\n  },\n  reducers: {\n    setSupply(state, { payload }) {\n      state.assets.find(a => a.name === payload.asset.name).currentSupply += payload.amount\n      state.assets.find(a => a.name === payload.asset.name).balance -= payload.amount\n    },\n    borrow(state, { payload }) {\n      state.assets.find(a => a.name === payload.asset.name).currentSupply -= payload.amount\n      state.assets.find(a => a.name === payload.asset.name).balance += payload.amount\n    }\n  }\n})","import { useState } from 'react';\nimport { Button, Form, Navbar, Table, Modal, FormControl, FormGroup } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { walletSlice } from '../wallet/walletSlice';\nimport { supplySlice } from './supplySlice';\n\nconst SupplyButton = (props) => {\n  const [show, setShow] = useState(false);\n  const [confirming, setconfirming] = useState(false)\n  const [tab, settab] = useState('supply')\n  const dispatch = useDispatch()\n\n\n  const handleClose = () => {\n    setShow(false);\n    setAmountToSupply(0);\n    setAmountToWithdraw(0);\n  }\n  const handleShow = () => setShow(true);\n\n  const Tabs = () => (\n    <div>\n      <span onClick={() => settab(\"supply\")}>Supply</span>\n      <span onClick={() => settab(\"withdraw\")}>Withdraw</span>\n    </div>\n  )\n\n  \n  const [amountToSupply, setAmountToSupply] = useState(0)\n  const onAmountToSupply = e => setAmountToSupply(e.target.value)\n  const isSupplyConfirmDisabled = !!!amountToSupply || amountToSupply <= 0 || amountToSupply > props.walletAsset.balance\n  const handleSupplyConfirm = () => {\n    setconfirming(true);\n    setTimeout(() => {\n      dispatch(walletSlice.actions.setSupply({ amount: parseInt(amountToSupply), asset: props.walletAsset}))\n      setShow(false)\n      setconfirming(false)\n      setAmountToSupply(0)\n    }, 500);\n  }\n  const supplyTab = (\n    <>\n      <Modal.Body>\n        <Tabs />\n        <Form>\n          <FormGroup>\n            <Form.Label>Amount</Form.Label>\n            <FormControl type=\"text\" placeholder=\"Amount\" value={amountToSupply} onChange={onAmountToSupply} />\n          </FormGroup>\n        </Form>\n        <Table>\n          <tbody>\n            <tr>\n              <td>Balance</td>\n              <td>{props.walletAsset.balance}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" disabled={isSupplyConfirmDisabled} onClick={handleSupplyConfirm}>\n          Confirm\n        </Button>\n      </Modal.Footer>\n      \n    </>\n  )\n\n  const [amountToWithdraw, setAmountToWithdraw] = useState(0)\n  const onAmountToWithdraw = e => setAmountToWithdraw(e.target.value)\n  const isWithdrawConfirmDisabled = !!!amountToWithdraw || amountToWithdraw <= 0 || amountToWithdraw > props.walletAsset.currentSupply\n  const handleWithdrawConfirm = () => {\n    setconfirming(true);\n    setTimeout(() => {\n      dispatch(walletSlice.actions.withdrawSupply({ amount: parseInt(amountToWithdraw), asset: props.walletAsset}))\n      setShow(false)\n      setconfirming(false)\n      setAmountToWithdraw(0)\n    }, 500);\n  }\n  const withdrawTab = (\n    <>\n      <Modal.Body>\n        <Tabs />\n        <Form>\n          <FormGroup>\n            <Form.Label>Amount</Form.Label>\n            <FormControl type=\"text\" placeholder=\"Amount\" value={amountToWithdraw} onChange={onAmountToWithdraw} />\n          </FormGroup>\n        </Form>\n        <Table>\n          <tbody>\n            <tr>\n              <td>Current Supplied</td>\n              <td>{props.walletAsset.currentSupply}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" disabled={isWithdrawConfirmDisabled} onClick={handleWithdrawConfirm}>\n          Confirm\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n\n  const ConfirmingModal = () => {\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Supply {props.market.asset}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div>Confirming...</div>\n      </Modal.Body>\n      <Modal.Footer>\n        \n      </Modal.Footer>\n    </Modal>\n  }\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Supply\n      </Button>\n\n      {confirming ? \n        <ConfirmingModal />\n        : \n        (\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Supply {props.market.asset}</Modal.Title>\n            </Modal.Header>\n            \n            {tab === \"supply\" ? supplyTab : withdrawTab}\n            \n          </Modal>\n        )\n      }\n\n      \n    </>\n  );\n}\n\nexport default SupplyButton","import { useState } from 'react';\nimport { Button, Form, Navbar, Table, Modal, FormControl, FormGroup } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { supplySlice } from './supplySlice';\nimport SupplyButton from './SupplyButton';\n\nconst SupplyMarket = props => {\n  const dispatch = useDispatch()\n  const wallet = useSelector(state => state.wallet)\n  const getWalletAsset = (assetName) => wallet.assets.find(a => a.name == assetName)\n  const walletAsset = getWalletAsset(props.market.asset)\n  const balance = walletAsset ? walletAsset.balance : 0\n  const onToggleChanged = (asset, value) => {\n    const payload = {\n      asset,\n      value\n    }\n    dispatch(supplySlice.actions.toggleSupply(payload))\n  }\n\n  return (\n    <tr>\n      <td>{props.market.asset}</td>\n      <td>{props.market.APY}%</td>\n      <td>{balance} {props.market.asset}</td>\n      <td>\n        <Form>\n          <Form.Check\n            type=\"switch\"\n            id={\"switch\" + props.market.asset}\n            label=\"\"\n            onChange={e => onToggleChanged(props.market.asset, e.target.value)}\n            value={props.market.isOn}\n          ></Form.Check>\n        </Form>\n      </td>\n      <td>\n        {balance > 0 && <SupplyButton market={props.market} walletAsset={walletAsset} />}\n      </td>\n    </tr>\n  )\n}\n\nexport default SupplyMarket","import { useState } from 'react';\nimport { Button, Form, Navbar, Table, Modal, FormControl, FormGroup } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { supplySlice } from './supplySlice';\nimport SupplyMarket from './SupplyMarket'\n\nconst Supply = () => {\n  const supply = useSelector(state => state.supply)\n  const wallet = useSelector(state => state.wallet)\n  \n  const suppliesInUsd = wallet.assets.map(asset => asset.currentSupply * supply.markets.find(s => s.asset === asset.name).usdExchange)\n  const totalSupply = suppliesInUsd.reduce((acc, usd) => acc + usd, 0)\n\n  let marketRows = supply.markets.map(market => <SupplyMarket market={market} />)\n  return (\n    <>\n      <div \n        className=\"text-center\"\n        style={{\n          height: \"100px\"\n        }}\n      >\n        <h4>Supply Balance</h4>\n        <h5>${totalSupply.toFixed(6)}</h5>\n      </div>\n      <h4>Supply Markets</h4>\n      <Table>\n        <thead>\n          <th>Asset</th>\n          <th>APY</th>\n          <th>Wallet</th>\n          <th>Collateral</th>\n          <th></th>\n        </thead>\n        <tbody>\n          {marketRows}\n        </tbody>\n      </Table>\n    </>\n  )\n}\n\nexport default Supply","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const marketSlice = createSlice({\n  name: \"market\",\n  initialState: {\n    markets: [\n      {\n        asset: \"ADA\",\n        apySupply: 1.5,\n        apyBorrow: 5.5,\n        usdExchange: 1.75127,\n      },\n      {\n        asset: \"LQ\",\n        apySupply: 5.5,\n        apyBorrow: 8.5,\n        usdExchange: 12.23,\n      }\n    ]\n  }\n})","import { useState } from 'react';\nimport { Button, Form, Navbar, Table, Modal, FormControl, FormGroup } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { walletSlice } from '../wallet/walletSlice';\nimport { marketSlice } from '../market/marketSlice';\n\nconst BorrowButton = props => {\n  const [show, setShow] = useState(false);\n  const [amount, setamount] = useState(0)\n  const [confirming, setconfirming] = useState(false)\n  const dispatch = useDispatch()\n\n  const onAmountChange = e => setamount(e.target.value)\n\n  const handleClose = () => {\n    setShow(false);\n    setamount(0);\n  }\n  const handleShow = () => setShow(true);\n  const handleConfirm = () => {\n    setconfirming(true);\n    setTimeout(() => {\n      dispatch(walletSlice.actions.setSupply({ amount: parseInt(amount), asset: props.walletAsset}))\n      setShow(false)\n      setconfirming(false)\n      setamount(0)\n    }, 500);\n  }\n\n  const balance = props.walletAsset.balance\n  const isConfirmDisabled = !!!amount || amount <= 0 || amount > balance\n\n  let body;\n  let footer;\n  if (confirming) {\n    body = (\n      <div>Confirming...</div>\n    )\n\n    footer = <div></div>\n  } else {\n    body = (\n      <>\n        <Form>\n          <FormGroup>\n            <Form.Label>Amount</Form.Label>\n            <FormControl type=\"text\" placeholder=\"Amount\" value={amount} onChange={onAmountChange} />\n          </FormGroup>\n        </Form>\n        <Table>\n          <tbody>\n            <tr>\n              <td>Balance</td>\n              <td>{balance}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </>\n    )\n\n    footer = (\n      <>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Cancel\n          </Button>\n        <Button variant=\"primary\" disabled={isConfirmDisabled} onClick={handleConfirm}>\n          Confirm\n          </Button>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Borrow\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Borrow {props.market.asset}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {body}\n        </Modal.Body>\n        <Modal.Footer>\n          {footer}\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default BorrowButton","import { useState } from 'react';\nimport { Button, Form, Navbar, Table, Modal, FormControl, FormGroup } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BorrowButton from './BorrowButton'\n\nconst BorrowMarket = props => {\n  const dispatch = useDispatch()\n  const wallet = useSelector(state => state.wallet)\n  const getWalletAsset = (assetName) => wallet.assets.find(a => a.name == assetName)\n  const walletAsset = getWalletAsset(props.market.asset)\n\n  return (\n    <tr>\n      <td>{props.market.asset}</td>\n      <td>{props.market.APY}%</td>\n      <td>{props.market.wallet} {props.market.asset}</td>\n      <td>$&nbsp;{props.market.liquidity}</td>\n      <td><BorrowButton market={props.market} walletAsset={walletAsset} /></td>\n    </tr>\n  )\n}\n\nexport default BorrowMarket","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Table from 'react-bootstrap/Table'\nimport BorrowMarket from './BorrowMarket'\n\nconst Borrow = () => {\n  const markets = useSelector(state => state.market.markets)\n  const totalBorrow = 0\n  return (\n    <>\n      <div \n        className=\"text-center\"\n        style={{\n          height: \"100px\"\n        }}\n      >\n        <h4>Borrow Balance</h4>\n        <h5>${totalBorrow.toFixed(6)}</h5>\n      </div>\n      <h4>Borrow Markets</h4>\n      <Table>\n        <thead>\n          <th>Assets</th>\n          <th>APY</th>\n          <th>Wallet</th>\n          <th>Liquidity</th>\n          <th></th>\n        </thead>\n        <tbody>\n          {markets.map(market => <BorrowMarket market={market} />)}\n        </tbody>\n      </Table>\n    </>\n  )\n}\n\nexport default Borrow","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\n\nexport default () => {\n  const wallet = useSelector(state => state.wallet)\n  return (\n    <Button>Wallet {wallet.address}</Button>\n  )\n}","import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Button, Navbar, Table } from 'react-bootstrap';\nimport Supply from '../features/supply/Supply';\nimport Borrow from '../features/borrow/Borrow';\nimport Wallet from '../features/wallet/Wallet';\n\nconst LqNavbar = () => {\n  return (\n    <Navbar bg=\"light\">\n      <Navbar.Brand className=\"text-dark\">Liqwid App</Navbar.Brand>\n      <Navbar.Collapse className=\"justify-content-end\">\n        <Wallet />\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nconst DemoApp = () => {\n  const netAPY = (4.528).toFixed(6)\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <LqNavbar />\n        </Col>\n      </Row>\n      \n      {/* spacing */}\n      <div style={{marginBottom: \"50px\", marginTop: \"50px\"}} className=\"text-center\">\n        <h1>Dashboard</h1>\n        <h1>Net APY {netAPY}</h1>\n      </div>\n\n      <Row>\n        <Col>\n          <Supply />\n        </Col>\n        <Col>\n          <Borrow />\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default DemoApp;","const { createSlice } = require(\"@reduxjs/toolkit\");\n\nexport const borrowSlice = createSlice({\n  name: \"borrow\",\n  initialState: {\n    markets: [\n      {\n        asset: \"ADA\",\n        APY: \"10\",\n        wallet: \"1000\",\n        liquidity: \"?\",\n      },\n    ],\n    totalBalance: 42\n  }\n})","import { configureStore } from '@reduxjs/toolkit'\nimport counterReducer from '../features/counter/counterSlice'\nimport { supplySlice } from '../features/supply/supplySlice'\nimport { borrowSlice } from '../features/borrow/borrowSlice'\nimport { walletSlice } from '../features/wallet/walletSlice'\nimport { marketSlice } from '../features/market/marketSlice'\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    supply: supplySlice.reducer,\n    borrow: borrowSlice.reducer,\n    market: marketSlice.reducer,\n    wallet: walletSlice.reducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport LiqwidApp from './layout/LiqwidApp';\nimport DemoApp from './layout/DemoApp';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport './sass/custom.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <DemoApp />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}